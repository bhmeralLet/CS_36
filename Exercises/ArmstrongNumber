#include <math.h>

    // returns the number of digits in a number
    unsigned numDigits(const unsigned n) {
        if (n < 10) return 1;
        return 1 + numDigits(n / 10);
    }


    // b is a number that is the sum of its own digits each raised to the power of the number of digits.
    // For example 0, 1, 153, 370, 371 and 407 are the Armstrong numbers.

    printf("Enter a number to check if it's Armstrong number.");
    int number;
    scanf_s("%d",&number);
    unsigned int numberLength = numDigits(number);
    double total = 0;
    int numberCopy = number;

    for(int i = 0; i < numberLength; i++){
        int digit = numberCopy % 10;
        total += pow(digit,numberLength);
        numberCopy /= 10;
    }

    if(number == total){
        printf("The number %d is an Armstrong number.",number);
    }else{
        printf("The number %d is not an Armstrong number.",number);

    }